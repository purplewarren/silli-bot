name: Test Silli Bot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest
        
    - name: Check directory structure
      run: |
        echo "📁 Repository structure:"
        ls -la
        echo "📁 Bot directory:"
        ls -la bot/
        echo "📁 Reasoner directory:"
        ls -la reasoner/
        echo "📁 Data directory:"
        ls -la data/
        
    - name: Validate Python syntax
      run: |
        echo "🔍 Checking Python syntax..."
        python -m py_compile bot/main.py
        python -m py_compile reasoner/app.py
        echo "✅ Python syntax validation passed"
        
    - name: Check imports (bot)
      run: |
        echo "🔍 Testing bot imports..."
        python -c "import sys; sys.path.append('.'); from bot.main import main; print('✅ Bot main imports successfully')"
        
    - name: Check imports (reasoner)
      run: |
        echo "🔍 Testing reasoner imports..."
        python -c "import sys; sys.path.append('.'); from reasoner.app import app; print('✅ Reasoner app imports successfully')"
        
    - name: Run basic tests
      run: |
        echo "🧪 Running basic tests..."
        if [ -f "tests/test_audio.py" ]; then
          python -m pytest tests/test_audio.py -v
        else
          echo "⚠️ No test_audio.py found, skipping"
        fi
        
    - name: Validate configuration files
      run: |
        echo "🔧 Validating configuration files..."
        if [ -f ".env" ]; then
          echo "✅ .env file exists"
        else
          echo "⚠️ .env file not found (expected for local development)"
        fi
        
        if [ -f "requirements.txt" ]; then
          echo "✅ requirements.txt exists"
          cat requirements.txt
        fi
        
        echo "✅ Configuration validation complete"
